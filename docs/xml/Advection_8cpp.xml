<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="Advection_8cpp" kind="file" language="C++">
    <compoundname>Advection.cpp</compoundname>
    <includes refid="Declare_8hpp" local="yes">Declare.hpp</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Advection.cpp</label>
        <link refid="Advection_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Config.hpp</label>
        <link refid="Config_8hpp"/>
      </node>
      <node id="2">
        <label>Declare.hpp</label>
        <link refid="Declare_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Eigen/Sparse</label>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PLUS</definition>
        <argsstring>(double var)</argsstring>
        <name>PLUS</name>
        <param>
          <type>double</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Advection.cpp" line="17" column="8" bodyfile="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Advection.cpp" bodystart="17" bodyend="19"/>
        <referencedby refid="classvvm_1ac0b7d76ebd915e07f064f05b5fe4b4a3" compoundref="Advection_8cpp" startline="25" endline="81">vvm::Advection_thermo</referencedby>
        <referencedby refid="classvvm_1aec9080346387072f75c1e5907a5f9964" compoundref="Advection_8cpp" startline="83" endline="148">vvm::Advection_zeta</referencedby>
      </memberdef>
      <memberdef kind="function" id="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double MINU</definition>
        <argsstring>(double var)</argsstring>
        <name>MINU</name>
        <param>
          <type>double</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Advection.cpp" line="21" column="8" bodyfile="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Advection.cpp" bodystart="21" bodyend="23"/>
        <referencedby refid="classvvm_1ac0b7d76ebd915e07f064f05b5fe4b4a3" compoundref="Advection_8cpp" startline="25" endline="81">vvm::Advection_thermo</referencedby>
        <referencedby refid="classvvm_1aec9080346387072f75c1e5907a5f9964" compoundref="Advection_8cpp" startline="83" endline="148">vvm::Advection_zeta</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Aaron Hsieh (<ulink url="mailto:b08209006@ntu.edu.tw">b08209006@ntu.edu.tw</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2024-03-13</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2024 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Declare_8hpp" kindref="compound">Declare.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Arakawa<sp/>Jacobian<sp/>for<sp/>streamfunction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Fix<sp/>the<sp/>blow<sp/>up<sp/>in<sp/>AB2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>var)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>(var<sp/>+<sp/>std::fabs(var));</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>var)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.5<sp/>*<sp/>(var<sp/>-<sp/>std::fabs(var));</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classvvm_1ac0b7d76ebd915e07f064f05b5fe4b4a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1ac0b7d76ebd915e07f064f05b5fe4b4a3" kindref="member">vvm::Advection_thermo</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**past,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**now,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**future,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>***dvar,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prhouvar_px_rho<sp/>=<sp/>0.,<sp/>prhowvar_pz_rho<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*flux_ucont,<sp/>*flux_wcont;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**flux_u<sp/>=<sp/><ref refid="classvvm_1a62fd0f50bdb5e309fe02cd6fa343cf79" kindref="member">vvm::allocate2DContinuousArray</ref>(model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>,<sp/>flux_ucont);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**flux_w<sp/>=<sp/><ref refid="classvvm_1a62fd0f50bdb5e309fe02cd6fa343cf79" kindref="member">vvm::allocate2DContinuousArray</ref>(model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>,<sp/>flux_wcont);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-1;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>-1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flux_u[i][k]<sp/>=<sp/>model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k]<sp/>*<sp/>model.<ref refid="classvvm_1a1ac0d1c50fc3935a312b6f667a1c34c0" kindref="member">u</ref>[i][k]<sp/>*<sp/>(now[i][k]<sp/>+<sp/>now[i-1][k]);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flux_w[i][k]<sp/>=<sp/>model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k]<sp/>*<sp/>model.<ref refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" kindref="member">w</ref>[i][k]<sp/>*<sp/>(now[i][k]<sp/>+<sp/>now[i][k-1]);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(AB2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>i<sp/>&lt;=<sp/>model.nx-3<sp/>&amp;&amp;<sp/>k<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>k<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-3)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flux_u[i][k]<sp/>+=<sp/>-1./3.<sp/>*<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k]*<ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(model.<ref refid="classvvm_1a1ac0d1c50fc3935a312b6f667a1c34c0" kindref="member">u</ref>[i][k])<sp/>*<sp/>(now[i][k]<sp/>-<sp/>now[i-1][k])</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>std::sqrt(model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k]*<ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(model.<ref refid="classvvm_1a1ac0d1c50fc3935a312b6f667a1c34c0" kindref="member">u</ref>[i][k])<sp/>*<sp/>model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k]*<ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(model.<ref refid="classvvm_1a1ac0d1c50fc3935a312b6f667a1c34c0" kindref="member">u</ref>[i-1][k]))*(now[i-1][k]<sp/>-<sp/>now[i-2][k])</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k]*<ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(model.<ref refid="classvvm_1a1ac0d1c50fc3935a312b6f667a1c34c0" kindref="member">u</ref>[i][k])<sp/>*<sp/>(now[i][k]<sp/>-<sp/>now[i-1][k])</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>std::sqrt(std::fabs(model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k]*<ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(model.<ref refid="classvvm_1a1ac0d1c50fc3935a312b6f667a1c34c0" kindref="member">u</ref>[i][k])<sp/>*<sp/>model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k]*<ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(model.<ref refid="classvvm_1a1ac0d1c50fc3935a312b6f667a1c34c0" kindref="member">u</ref>[i+1][k])))*(now[i+1][k]<sp/>-<sp/>now[i][k]));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flux_w[i][k]<sp/>+=<sp/>-1./3.<sp/>*<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k]*<ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(model.<ref refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" kindref="member">w</ref>[i][k])<sp/>*<sp/>(now[i][k]<sp/>-<sp/>now[i][k-1])</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>std::sqrt(model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k]*<ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(model.<ref refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" kindref="member">w</ref>[i][k])<sp/>*<sp/>model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k-1]*<ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(model.<ref refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" kindref="member">w</ref>[i][k-1]))*(now[i][k-1]<sp/>-<sp/>now[i][k-2])</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k]*<ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(model.<ref refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" kindref="member">w</ref>[i][k])<sp/>*<sp/>(now[i][k]<sp/>-<sp/>now[i][k-1])</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>std::sqrt(std::fabs(model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k]*<ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(model.<ref refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" kindref="member">w</ref>[i][k])<sp/>*<sp/>model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k+1]*<ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(model.<ref refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" kindref="member">w</ref>[i][k+1])))*(now[i][k+1]<sp/>-<sp/>now[i][k]));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a26777567d798e7a46a54a9adc5d7242f" kindref="member">BoundaryProcess2D_center</ref>(flux_u,<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a26777567d798e7a46a54a9adc5d7242f" kindref="member">BoundaryProcess2D_center</ref>(flux_w,<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.nx;<sp/>i++)<sp/>flux_w[i][0]<sp/>=<sp/>flux_w[i][1]<sp/>=<sp/>flux_w[i][model.nz-1]<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>flux_w[i][0]<sp/>=<sp/>flux_w[i][model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-1]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-2;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>-2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prhouvar_px_rho<sp/>=<sp/>(flux_u[i+1][k]<sp/>-<sp/>flux_u[i][k])<sp/>*<sp/>model.<ref refid="classvvm_1ae3249304cc3a6fa7f98394dccce57f61" kindref="member">r2dx</ref><sp/>/<sp/>model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prhowvar_pz_rho<sp/>=<sp/>(flux_w[i][k+1]<sp/>-<sp/>flux_w[i][k])<sp/>*<sp/>model.<ref refid="classvvm_1ae1f95980069895fdafc4ba4b29826bf0" kindref="member">r2dz</ref><sp/>/<sp/>model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(AB2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dvar[i][k][(model.<ref refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" kindref="member">step</ref>+1)%2]<sp/>=<sp/>-prhouvar_px_rho<sp/>-<sp/>prhowvar_pz_rho;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model.<ref refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" kindref="member">step</ref><sp/>==<sp/>0)<sp/>dvar[i][k][0]<sp/>=<sp/>dvar[i][k][1];</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>future[i][k]<sp/>=<sp/>now[i][k]<sp/>+<sp/>1.5*model.<ref refid="classvvm_1a9f15f33b8d04ec8a3cf7d9c9d9e31f8d" kindref="member">dt</ref>*dvar[i][k][(model.<ref refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" kindref="member">step</ref>+1)%2]<sp/>-<sp/>0.5*model.<ref refid="classvvm_1a9f15f33b8d04ec8a3cf7d9c9d9e31f8d" kindref="member">dt</ref>*dvar[i][k][model.<ref refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" kindref="member">step</ref>%2];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>future[i][k]<sp/>=<sp/>past[i][k]<sp/>+<sp/>model.<ref refid="classvvm_1a35038a3310f0394ec73c928ff9801f84" kindref="member">d2t</ref><sp/>*<sp/>(-prhouvar_px_rho<sp/>-<sp/>prhowvar_pz_rho);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvvm_1abcdd5cff6d1bab2f414fe98e87d98a3a" kindref="member">vvm::deallocate2DContinuousArray</ref>(flux_u,<sp/>flux_ucont);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvvm_1abcdd5cff6d1bab2f414fe98e87d98a3a" kindref="member">vvm::deallocate2DContinuousArray</ref>(flux_w,<sp/>flux_wcont);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classvvm_1aec9080346387072f75c1e5907a5f9964" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1aec9080346387072f75c1e5907a5f9964" kindref="member">vvm::Advection_zeta</ref>(<ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-2;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>-2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a6d1d4f88a5c85e8e281c09d9b0aec4f9" kindref="member">U_w</ref>[i][k]<sp/>=<sp/>0.25<sp/>*<sp/>(model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k]<sp/>*<sp/>(model.<ref refid="classvvm_1a1ac0d1c50fc3935a312b6f667a1c34c0" kindref="member">u</ref>[i+1][k]+model.<ref refid="classvvm_1a1ac0d1c50fc3935a312b6f667a1c34c0" kindref="member">u</ref>[i][k])<sp/>+<sp/>model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k-1]<sp/>*<sp/>(model.<ref refid="classvvm_1a1ac0d1c50fc3935a312b6f667a1c34c0" kindref="member">u</ref>[i+1][k-1]+model.<ref refid="classvvm_1a1ac0d1c50fc3935a312b6f667a1c34c0" kindref="member">u</ref>[i][k-1]));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a58ee764a638d9b1a3e1096c025543fc2" kindref="member">W_u</ref>[i][k]<sp/>=<sp/>0.25<sp/>*<sp/>(model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k+1]<sp/>*<sp/>(model.<ref refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" kindref="member">w</ref>[i][k+1]+model.<ref refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" kindref="member">w</ref>[i-1][k+1])<sp/>+<sp/>model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k]<sp/>*<sp/>(model.<ref refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" kindref="member">w</ref>[i][k]+model.<ref refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" kindref="member">w</ref>[i-1][k]));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a26777567d798e7a46a54a9adc5d7242f" kindref="member">BoundaryProcess2D_center</ref>(model.<ref refid="classvvm_1a6d1d4f88a5c85e8e281c09d9b0aec4f9" kindref="member">U_w</ref>,<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a26777567d798e7a46a54a9adc5d7242f" kindref="member">BoundaryProcess2D_center</ref>(model.<ref refid="classvvm_1a58ee764a638d9b1a3e1096c025543fc2" kindref="member">W_u</ref>,<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>model.<ref refid="classvvm_1a58ee764a638d9b1a3e1096c025543fc2" kindref="member">W_u</ref>[i][0]<sp/>=<sp/>model.<ref refid="classvvm_1a58ee764a638d9b1a3e1096c025543fc2" kindref="member">W_u</ref>[i][model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-1]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*flux_ucont,<sp/>*flux_wcont;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**flux_u<sp/>=<sp/><ref refid="classvvm_1a62fd0f50bdb5e309fe02cd6fa343cf79" kindref="member">vvm::allocate2DContinuousArray</ref>(model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>,<sp/>flux_ucont);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**flux_w<sp/>=<sp/><ref refid="classvvm_1a62fd0f50bdb5e309fe02cd6fa343cf79" kindref="member">vvm::allocate2DContinuousArray</ref>(model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>,<sp/>flux_wcont);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-2;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>-2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flux_u[i][k]<sp/>=<sp/>model.<ref refid="classvvm_1a6d1d4f88a5c85e8e281c09d9b0aec4f9" kindref="member">U_w</ref>[i][k]<sp/>*<sp/>(model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i+1][k]<sp/>+<sp/>model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k]);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flux_w[i][k]<sp/>=<sp/>model.<ref refid="classvvm_1a58ee764a638d9b1a3e1096c025543fc2" kindref="member">W_u</ref>[i][k]<sp/>*<sp/>(model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k+1]<sp/>+<sp/>model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k]);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(AB2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>i<sp/>&lt;=<sp/>model.nx-3<sp/>&amp;&amp;<sp/>k<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>k<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-3)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flux_u[i][k]<sp/>+=<sp/>-1./3.<sp/>*<sp/>(<ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(model.<ref refid="classvvm_1a6d1d4f88a5c85e8e281c09d9b0aec4f9" kindref="member">U_w</ref>[i][k])*(model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i+1][k]-model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k])<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>std::sqrt(<ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(model.<ref refid="classvvm_1a6d1d4f88a5c85e8e281c09d9b0aec4f9" kindref="member">U_w</ref>[i][k])<sp/>*<sp/><ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(model.<ref refid="classvvm_1a6d1d4f88a5c85e8e281c09d9b0aec4f9" kindref="member">U_w</ref>[i-1][k]))*(model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k]-model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i-1][k])<sp/>-<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(model.<ref refid="classvvm_1a6d1d4f88a5c85e8e281c09d9b0aec4f9" kindref="member">U_w</ref>[i][k])*(model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i+1][k]-model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k])<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>std::sqrt(std::fabs(<ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(model.<ref refid="classvvm_1a6d1d4f88a5c85e8e281c09d9b0aec4f9" kindref="member">U_w</ref>[i][k])<sp/>*<sp/><ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(model.<ref refid="classvvm_1a6d1d4f88a5c85e8e281c09d9b0aec4f9" kindref="member">U_w</ref>[i+1][k])))*(model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i+2][k]-model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i+1][k]));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flux_w[i][k]<sp/>+=<sp/>-1./3.<sp/>*<sp/>(<ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(model.<ref refid="classvvm_1a58ee764a638d9b1a3e1096c025543fc2" kindref="member">W_u</ref>[i][k])*(model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k+1]-model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k])<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>std::sqrt(<ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(model.<ref refid="classvvm_1a58ee764a638d9b1a3e1096c025543fc2" kindref="member">W_u</ref>[i][k])<sp/>*<sp/><ref refid="Advection_8cpp_1ac35c0748e7807333a355cd2b8e5dfef8" kindref="member">PLUS</ref>(model.<ref refid="classvvm_1a58ee764a638d9b1a3e1096c025543fc2" kindref="member">W_u</ref>[i][k-1]))*(model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k]-model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k-1])<sp/>-<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(model.<ref refid="classvvm_1a58ee764a638d9b1a3e1096c025543fc2" kindref="member">W_u</ref>[i][k])*(model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k+1]-model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k])<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>std::sqrt(std::fabs(<ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(model.<ref refid="classvvm_1a58ee764a638d9b1a3e1096c025543fc2" kindref="member">W_u</ref>[i][k])<sp/>*<sp/><ref refid="Advection_8cpp_1a75af9b80e9b72faac90f0e574bc62a8d" kindref="member">MINU</ref>(model.<ref refid="classvvm_1a58ee764a638d9b1a3e1096c025543fc2" kindref="member">W_u</ref>[i][k+1])))*(model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k+2]-model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k+1]));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a26777567d798e7a46a54a9adc5d7242f" kindref="member">BoundaryProcess2D_center</ref>(flux_u,<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a26777567d798e7a46a54a9adc5d7242f" kindref="member">BoundaryProcess2D_center</ref>(flux_w,<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>flux_w[i][0]<sp/>=<sp/>flux_w[i][model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-1]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prhouzeta_px_rho<sp/>=<sp/>0.,<sp/>prhowzeta_pz_rho<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>2;<sp/>k<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-2;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>-2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prhouzeta_px_rho<sp/>=<sp/>(flux_u[i][k]<sp/>-<sp/>flux_u[i-1][k])<sp/>*<sp/>model.<ref refid="classvvm_1ae3249304cc3a6fa7f98394dccce57f61" kindref="member">r2dx</ref><sp/>/<sp/>model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prhowzeta_pz_rho<sp/>=<sp/>(flux_w[i][k]<sp/>-<sp/>flux_w[i][k-1])<sp/>*<sp/>model.<ref refid="classvvm_1ae1f95980069895fdafc4ba4b29826bf0" kindref="member">r2dz</ref><sp/>/<sp/>model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(AB2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a572ac38842831df7b76adfeb6f71400d" kindref="member">dzeta_advect</ref>[i][k][(model.<ref refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" kindref="member">step</ref>+1)%2]<sp/>=<sp/>-prhouzeta_px_rho<sp/>-<sp/>prhowzeta_pz_rho;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model.<ref refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" kindref="member">step</ref><sp/>==<sp/>0)<sp/>model.<ref refid="classvvm_1a572ac38842831df7b76adfeb6f71400d" kindref="member">dzeta_advect</ref>[i][k][0]<sp/>=<sp/>model.<ref refid="classvvm_1a572ac38842831df7b76adfeb6f71400d" kindref="member">dzeta_advect</ref>[i][k][1];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a44e87b0393bbb303fe26c12b4defc572" kindref="member">zetap</ref>[i][k]<sp/>=<sp/>model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k]<sp/>+<sp/>1.5*model.<ref refid="classvvm_1a9f15f33b8d04ec8a3cf7d9c9d9e31f8d" kindref="member">dt</ref>*model.<ref refid="classvvm_1a572ac38842831df7b76adfeb6f71400d" kindref="member">dzeta_advect</ref>[i][k][(model.<ref refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" kindref="member">step</ref>+1)%2]<sp/>-<sp/>0.5*model.<ref refid="classvvm_1a9f15f33b8d04ec8a3cf7d9c9d9e31f8d" kindref="member">dt</ref>*model.<ref refid="classvvm_1a572ac38842831df7b76adfeb6f71400d" kindref="member">dzeta_advect</ref>[i][k][model.<ref refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" kindref="member">step</ref>%2];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a44e87b0393bbb303fe26c12b4defc572" kindref="member">zetap</ref>[i][k]<sp/>=<sp/>model.<ref refid="classvvm_1a9940c24c524df0c0bcfa1f009857e4cd" kindref="member">zetam</ref>[i][k]<sp/>+<sp/>model.<ref refid="classvvm_1a35038a3310f0394ec73c928ff9801f84" kindref="member">d2t</ref><sp/>*<sp/>(-prhouzeta_px_rho<sp/>-<sp/>prhowzeta_pz_rho);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvvm_1abcdd5cff6d1bab2f414fe98e87d98a3a" kindref="member">vvm::deallocate2DContinuousArray</ref>(flux_u,<sp/>flux_ucont);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvvm_1abcdd5cff6d1bab2f414fe98e87d98a3a" kindref="member">vvm::deallocate2DContinuousArray</ref>(flux_w,<sp/>flux_wcont);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WATER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classvvm_1a5a6a59d52a4562766f6c57429cae2cb5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1a5a6a59d52a4562766f6c57429cae2cb5" kindref="member">vvm::Advection_qrVT</ref>(<ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prhoVTqr_pz_rho<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*flux_wcont;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**flux_w<sp/>=<sp/><ref refid="classvvm_1a62fd0f50bdb5e309fe02cd6fa343cf79" kindref="member">vvm::allocate2DContinuousArray</ref>(model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>,<sp/>flux_wcont);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>VT<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(AB2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>VT_u<sp/>=<sp/>0.,<sp/>VT_d<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-2;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>-2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT<sp/>=<sp/>1E-2<sp/>*<sp/>(3634<sp/>*<sp/>pow(1E-3*model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k]<sp/>*<sp/>0.5*(model.<ref refid="classvvm_1ae8846fd38da9bfa59aca4c30b80f4827" kindref="member">qr</ref>[i][k]+model.<ref refid="classvvm_1ae8846fd38da9bfa59aca4c30b80f4827" kindref="member">qr</ref>[i][k-1]),<sp/>0.1346)<sp/>*<sp/>pow(model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k]/model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[1],<sp/>-0.5));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flux_w[i][k]<sp/>=<sp/>model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k]<sp/>*<sp/>VT<sp/>*<sp/>(model.<ref refid="classvvm_1ae8846fd38da9bfa59aca4c30b80f4827" kindref="member">qr</ref>[i][k]<sp/>+<sp/>model.<ref refid="classvvm_1ae8846fd38da9bfa59aca4c30b80f4827" kindref="member">qr</ref>[i][k-1]);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(AB2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(i<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>i<sp/>&lt;=<sp/>model.nx-2<sp/>&amp;&amp;<sp/>k<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>k<sp/>&lt;=<sp/>model.nz-2)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT_u<sp/>=<sp/>1E-2<sp/>*<sp/>(3634<sp/>*<sp/>pow(1E-3*model.rhow[k+1]<sp/>*<sp/>0.5*(model.qr[i][k+1]+model.qr[i][k]),<sp/>0.1346)<sp/>*<sp/>pow(model.rhow[k+1]/model.rhow[1],<sp/>-0.5));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT_d<sp/>=<sp/>1E-2<sp/>*<sp/>(3634<sp/>*<sp/>pow(1E-3*model.rhow[k-1]<sp/>*<sp/>0.5*(model.qr[i][k-1]+model.qr[i][k-2]),<sp/>0.1346)<sp/>*<sp/>pow(model.rhow[k-1]/model.rhow[1],<sp/>-0.5));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flux_w[i][k]<sp/>+=<sp/>-1./3.<sp/>*<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(model.rhow[k]*PLUS(VT)<sp/>*<sp/>(model.qr[i][k]<sp/>-<sp/>model.qr[i][k-1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>std::sqrt(model.rhow[k]*PLUS(VT)<sp/>*<sp/>model.rhow[k-1]*PLUS(VT_d))*(model.qr[i][k-1]<sp/>-<sp/>model.qr[i][k-2])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>model.rhow[k]*MINU(VT)<sp/>*<sp/>(model.qr[i][k]<sp/>-<sp/>model.qr[i][k-1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>std::sqrt(std::fabs(model.rhow[k]*MINU(VT)<sp/>*<sp/>model.rhow[k+1]*MINU(VT_u)))*(model.qr[i][k+1]<sp/>-<sp/>model.qr[i][k]));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a26777567d798e7a46a54a9adc5d7242f" kindref="member">BoundaryProcess2D_center</ref>(flux_w,<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.nx;<sp/>i++)<sp/>flux_w[i][0]<sp/>=<sp/>flux_w[i][1]<sp/>=<sp/>flux_w[i][model.nz-1]<sp/>=<sp/>0.;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>flux_w[i][0]<sp/>=<sp/>flux_w[i][model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-1]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>collapse(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-2;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>-2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prhoVTqr_pz_rho<sp/>=<sp/>(flux_w[i][k+1]<sp/>-<sp/>flux_w[i][k])<sp/>*<sp/>model.<ref refid="classvvm_1ae1f95980069895fdafc4ba4b29826bf0" kindref="member">r2dz</ref><sp/>/<sp/>model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(AB2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1a5cf6c91487efc55d3a6df48feff0bf65" kindref="member">dqr_VT</ref>[i][k][(model.<ref refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" kindref="member">step</ref>+1)%2]<sp/>=<sp/>prhoVTqr_pz_rho;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model.<ref refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" kindref="member">step</ref><sp/>==<sp/>0)<sp/>model.<ref refid="classvvm_1a5cf6c91487efc55d3a6df48feff0bf65" kindref="member">dqr_VT</ref>[i][k][0]<sp/>=<sp/>model.<ref refid="classvvm_1a5cf6c91487efc55d3a6df48feff0bf65" kindref="member">dqr_VT</ref>[i][k][1];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1ae82e779827b9d2fac34c37ca944ba2f7" kindref="member">qrp</ref>[i][k]<sp/>+=<sp/>1.5*model.<ref refid="classvvm_1a9f15f33b8d04ec8a3cf7d9c9d9e31f8d" kindref="member">dt</ref>*model.<ref refid="classvvm_1a5cf6c91487efc55d3a6df48feff0bf65" kindref="member">dqr_VT</ref>[i][k][(model.<ref refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" kindref="member">step</ref>+1)%2]<sp/>-<sp/>0.5*model.<ref refid="classvvm_1a9f15f33b8d04ec8a3cf7d9c9d9e31f8d" kindref="member">dt</ref>*model.<ref refid="classvvm_1a5cf6c91487efc55d3a6df48feff0bf65" kindref="member">dqr_VT</ref>[i][k][model.<ref refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" kindref="member">step</ref>%2];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.<ref refid="classvvm_1ae82e779827b9d2fac34c37ca944ba2f7" kindref="member">qrp</ref>[i][k]<sp/>=<sp/>model.<ref refid="classvvm_1ac7f8c144268c93330663189e886459db" kindref="member">qrm</ref>[i][k]<sp/>+<sp/>model.<ref refid="classvvm_1a35038a3310f0394ec73c928ff9801f84" kindref="member">d2t</ref><sp/>*<sp/>(prhoVTqr_pz_rho);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvvm_1abcdd5cff6d1bab2f414fe98e87d98a3a" kindref="member">vvm::deallocate2DContinuousArray</ref>(flux_w,<sp/>flux_wcont);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Advection.cpp"/>
  </compounddef>
</doxygen>
