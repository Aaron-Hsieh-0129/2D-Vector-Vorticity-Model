<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classvvm_1_1Iteration" kind="class" language="C++" prot="public">
    <compoundname>vvm::Iteration</compoundname>
    <includes refid="Declare_8hpp" local="no">Declare.hpp</includes>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classvvm_1_1Iteration_1ad13b77906e852185c8b1b2db00475049" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vvm::Iteration::pzeta_pt</definition>
        <argsstring>(vvm &amp;model)</argsstring>
        <name>pzeta_pt</name>
        <qualifiedname>vvm::Iteration::pzeta_pt</qualifiedname>
        <param>
          <type><ref refid="classvvm" kindref="compound">vvm</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Declare.hpp" line="591" column="21" bodyfile="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Iteration.cpp" bodystart="4" bodyend="9"/>
        <references refid="classvvm_1aec9080346387072f75c1e5907a5f9964" compoundref="Advection_8cpp" startline="83" endline="148">vvm::Advection_zeta</references>
        <references refid="classvvm_1ac41a46f58ad272f540b96ad68895f88d" compoundref="Boundary_8cpp" startline="21" endline="30">vvm::BoundaryProcess2D_westdown</references>
        <references refid="classvvm_1ad5a7610975364e5b4163e7aff3c8e7ef" compoundref="Buoyancy_8cpp" startline="11" endline="49">vvm::Bouyancy</references>
        <references refid="classvvm_1a54019773003b18a98f267df45ee230bb" compoundref="Declare_8hpp" startline="280">vvm::nx</references>
        <references refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" compoundref="Declare_8hpp" startline="281">vvm::nz</references>
        <references refid="classvvm_1a44e87b0393bbb303fe26c12b4defc572" compoundref="Declare_8hpp" startline="336">vvm::zetap</references>
      </memberdef>
      <memberdef kind="function" id="classvvm_1_1Iteration_1a06f21fc868772f20f7c9e6241a5cf3b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vvm::Iteration::pth_pt</definition>
        <argsstring>(vvm &amp;model)</argsstring>
        <name>pth_pt</name>
        <qualifiedname>vvm::Iteration::pth_pt</qualifiedname>
        <param>
          <type><ref refid="classvvm" kindref="compound">vvm</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Declare.hpp" line="592" column="21" bodyfile="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Iteration.cpp" bodystart="11" bodyend="15"/>
        <references refid="classvvm_1ac0b7d76ebd915e07f064f05b5fe4b4a3" compoundref="Advection_8cpp" startline="25" endline="81">vvm::Advection_thermo</references>
        <references refid="classvvm_1a26777567d798e7a46a54a9adc5d7242f" compoundref="Boundary_8cpp" startline="9" endline="19">vvm::BoundaryProcess2D_center</references>
        <references refid="classvvm_1a858622ae2fcf246a8c793084e911bab8" compoundref="Declare_8hpp" startline="402">vvm::dth_advect</references>
        <references refid="classvvm_1a54019773003b18a98f267df45ee230bb" compoundref="Declare_8hpp" startline="280">vvm::nx</references>
        <references refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" compoundref="Declare_8hpp" startline="281">vvm::nz</references>
        <references refid="classvvm_1a590abe748fc6d7ee9c24108100db04a9" compoundref="Declare_8hpp" startline="340">vvm::th</references>
        <references refid="classvvm_1a37ff81702e9ae1cdae172a6fbd6fe57e" compoundref="Declare_8hpp" startline="341">vvm::thm</references>
        <references refid="classvvm_1ae9b64ac44720501013d0f18fd774474d" compoundref="Declare_8hpp" startline="339">vvm::thp</references>
      </memberdef>
      <memberdef kind="function" id="classvvm_1_1Iteration_1ac37b1be7be4bb8ba81a9232f85066ca2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vvm::Iteration::pqv_pt</definition>
        <argsstring>(vvm &amp;model)</argsstring>
        <name>pqv_pt</name>
        <qualifiedname>vvm::Iteration::pqv_pt</qualifiedname>
        <param>
          <type><ref refid="classvvm" kindref="compound">vvm</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Declare.hpp" line="594" column="25" bodyfile="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Iteration.cpp" bodystart="64" bodyend="70"/>
        <references refid="classvvm_1ac0b7d76ebd915e07f064f05b5fe4b4a3" compoundref="Advection_8cpp" startline="25" endline="81">vvm::Advection_thermo</references>
        <references refid="classvvm_1a26777567d798e7a46a54a9adc5d7242f" compoundref="Boundary_8cpp" startline="9" endline="19">vvm::BoundaryProcess2D_center</references>
        <references refid="classvvm_1a441e715b880f02afa09dc83c943591b5" compoundref="Declare_8hpp" startline="411">vvm::dqv_advect</references>
        <references refid="classvvm_1_1MicroPhysics_1aff5f0dc202584c522dc22f107066471a" compoundref="MicroPhysics_8cpp" startline="115" endline="137">vvm::MicroPhysics::NegativeValueProcess</references>
        <references refid="classvvm_1a54019773003b18a98f267df45ee230bb" compoundref="Declare_8hpp" startline="280">vvm::nx</references>
        <references refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" compoundref="Declare_8hpp" startline="281">vvm::nz</references>
        <references refid="classvvm_1ae463dcd6a3bd5edcb0057346216a2ee9" compoundref="Declare_8hpp" startline="371">vvm::qv</references>
        <references refid="classvvm_1ac2a3231c8911361e30eacdc4a1b3327f" compoundref="Declare_8hpp" startline="372">vvm::qvm</references>
        <references refid="classvvm_1a345c7e128e6c8a81a3949456530a428a" compoundref="Declare_8hpp" startline="370">vvm::qvp</references>
      </memberdef>
      <memberdef kind="function" id="classvvm_1_1Iteration_1ae8867dc15d6fbcd551f22a4c3cf6155f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vvm::Iteration::pqc_pt</definition>
        <argsstring>(vvm &amp;model)</argsstring>
        <name>pqc_pt</name>
        <qualifiedname>vvm::Iteration::pqc_pt</qualifiedname>
        <param>
          <type><ref refid="classvvm" kindref="compound">vvm</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Declare.hpp" line="595" column="25" bodyfile="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Iteration.cpp" bodystart="72" bodyend="77"/>
        <references refid="classvvm_1ac0b7d76ebd915e07f064f05b5fe4b4a3" compoundref="Advection_8cpp" startline="25" endline="81">vvm::Advection_thermo</references>
        <references refid="classvvm_1a26777567d798e7a46a54a9adc5d7242f" compoundref="Boundary_8cpp" startline="9" endline="19">vvm::BoundaryProcess2D_center</references>
        <references refid="classvvm_1a4c5f65644ab9e925e9d342822141c3fe" compoundref="Declare_8hpp" startline="412">vvm::dqc_advect</references>
        <references refid="classvvm_1_1MicroPhysics_1aff5f0dc202584c522dc22f107066471a" compoundref="MicroPhysics_8cpp" startline="115" endline="137">vvm::MicroPhysics::NegativeValueProcess</references>
        <references refid="classvvm_1a54019773003b18a98f267df45ee230bb" compoundref="Declare_8hpp" startline="280">vvm::nx</references>
        <references refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" compoundref="Declare_8hpp" startline="281">vvm::nz</references>
        <references refid="classvvm_1a2e358a42bc3c08a8bd162e5d600d743d" compoundref="Declare_8hpp" startline="374">vvm::qc</references>
        <references refid="classvvm_1a84a7559c5181efa5298bb52a9590ffed" compoundref="Declare_8hpp" startline="375">vvm::qcm</references>
        <references refid="classvvm_1a4aa22ea3e57d8899527556b2bd7f92fb" compoundref="Declare_8hpp" startline="373">vvm::qcp</references>
      </memberdef>
      <memberdef kind="function" id="classvvm_1_1Iteration_1a01e3bb04b6aefce6bddc3378a1b1e97d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vvm::Iteration::pqr_pt</definition>
        <argsstring>(vvm &amp;model)</argsstring>
        <name>pqr_pt</name>
        <qualifiedname>vvm::Iteration::pqr_pt</qualifiedname>
        <param>
          <type><ref refid="classvvm" kindref="compound">vvm</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Declare.hpp" line="596" column="25" bodyfile="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Iteration.cpp" bodystart="79" bodyend="93"/>
        <references refid="classvvm_1a5a6a59d52a4562766f6c57429cae2cb5" compoundref="Advection_8cpp" startline="151" endline="206">vvm::Advection_qrVT</references>
        <references refid="classvvm_1ac0b7d76ebd915e07f064f05b5fe4b4a3" compoundref="Advection_8cpp" startline="25" endline="81">vvm::Advection_thermo</references>
        <references refid="classvvm_1a26777567d798e7a46a54a9adc5d7242f" compoundref="Boundary_8cpp" startline="9" endline="19">vvm::BoundaryProcess2D_center</references>
        <references refid="classvvm_1a6ec68f2455dc07ed7d272c6377a87ac6" compoundref="Declare_8hpp" startline="413">vvm::dqr_advect</references>
        <references refid="classvvm_1_1MicroPhysics_1aff5f0dc202584c522dc22f107066471a" compoundref="MicroPhysics_8cpp" startline="115" endline="137">vvm::MicroPhysics::NegativeValueProcess</references>
        <references refid="classvvm_1a54019773003b18a98f267df45ee230bb" compoundref="Declare_8hpp" startline="280">vvm::nx</references>
        <references refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" compoundref="Declare_8hpp" startline="281">vvm::nz</references>
        <references refid="classvvm_1aa6f154abb97ec14856d347f417c7370e" compoundref="Declare_8hpp" startline="383">vvm::precip</references>
        <references refid="classvvm_1ae8846fd38da9bfa59aca4c30b80f4827" compoundref="Declare_8hpp" startline="377">vvm::qr</references>
        <references refid="classvvm_1ac7f8c144268c93330663189e886459db" compoundref="Declare_8hpp" startline="378">vvm::qrm</references>
        <references refid="classvvm_1ae82e779827b9d2fac34c37ca944ba2f7" compoundref="Declare_8hpp" startline="376">vvm::qrp</references>
        <references refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" compoundref="Declare_8hpp" startline="320">vvm::rhou</references>
        <references refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" compoundref="Declare_8hpp" startline="321">vvm::rhow</references>
        <references refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" compoundref="Declare_8hpp" startline="343">vvm::w</references>
      </memberdef>
      <memberdef kind="function" id="classvvm_1_1Iteration_1ae70278e6ede67ab538bda7e6eb7f4aef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vvm::Iteration::updateMean</definition>
        <argsstring>(vvm &amp;model)</argsstring>
        <name>updateMean</name>
        <qualifiedname>vvm::Iteration::updateMean</qualifiedname>
        <param>
          <type><ref refid="classvvm" kindref="compound">vvm</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Declare.hpp" line="599" column="21" bodyfile="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Iteration.cpp" bodystart="17" bodyend="61"/>
        <references refid="classvvm_1af45deea67718860b5736da7b80a36a98" compoundref="Boundary_8cpp" startline="3" endline="7">vvm::BoundaryProcess1D_center</references>
        <references refid="classvvm_1a54019773003b18a98f267df45ee230bb" compoundref="Declare_8hpp" startline="280">vvm::nx</references>
        <references refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" compoundref="Declare_8hpp" startline="281">vvm::nz</references>
        <references refid="classvvm_1a4196b3b03002394826deea7481714e78" compoundref="Declare_8hpp" startline="323">vvm::qvb</references>
        <references refid="classvvm_1a345c7e128e6c8a81a3949456530a428a" compoundref="Declare_8hpp" startline="370">vvm::qvp</references>
        <references refid="classvvm_1a07e5c32b8b9f7f31ba90c29c6e11adfa" compoundref="Declare_8hpp" startline="316">vvm::thb</references>
        <references refid="classvvm_1a7521c72c09b92ebed7d84d5ec6cab411" compoundref="Declare_8hpp" startline="319">vvm::thb_zeta</references>
        <references refid="classvvm_1adf7c0e67261aaea9d60315e02d59ee1c" compoundref="Declare_8hpp" startline="318">vvm::thbm</references>
        <references refid="classvvm_1ae9b64ac44720501013d0f18fd774474d" compoundref="Declare_8hpp" startline="339">vvm::thp</references>
        <references refid="classvvm_1aeefca932b6bff42753f1abd44591ea03" compoundref="Declare_8hpp" startline="329">vvm::thvb</references>
        <references refid="classvvm_1a9428709fb1a80782bbdbc9ebd5ed06ea" compoundref="Declare_8hpp" startline="330">vvm::thvbm</references>
      </memberdef>
      <memberdef kind="function" id="classvvm_1_1Iteration_1aad30e493dc2f262d8349e7832828a4db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vvm::Iteration::TimeMarching</definition>
        <argsstring>(vvm &amp;model)</argsstring>
        <name>TimeMarching</name>
        <qualifiedname>vvm::Iteration::TimeMarching</qualifiedname>
        <param>
          <type><ref refid="classvvm" kindref="compound">vvm</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Declare.hpp" line="600" column="21" bodyfile="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Iteration.cpp" bodystart="128" bodyend="246"/>
        <references refid="classvvm_1_1MicroPhysics_1a5cdf63f4c10a7bf9016bbf84836d32b4" compoundref="MicroPhysics_8cpp" startline="53" endline="76">vvm::MicroPhysics::accretion</references>
        <references refid="classvvm_1ae95d349fc79929ad9bd5b95e3cd97c0b" compoundref="AddForcing_8cpp" startline="6" endline="26">vvm::AddForcing</references>
        <references refid="classvvm_1a6e3cc05ead48d2bb558d08fdf2e93df9" compoundref="Declare_8hpp" startline="303">vvm::addforcingtime</references>
        <references refid="classvvm_1_1MicroPhysics_1a2093687ea0bcd970d652b83a9454a795" compoundref="MicroPhysics_8cpp" startline="28" endline="50">vvm::MicroPhysics::autoconversion</references>
        <references refid="classvvm_1adc74ab7c911695270801d064f78d8b07" compoundref="Boundary_8cpp" startline="32" endline="42">vvm::BoundaryProcess2D_all</references>
        <references refid="classvvm_1_1PoissonSolver_1ad9cd3bfdd88142ba11cba49029a564ae" compoundref="PoissonSolver_8cpp" startline="480" endline="644">vvm::PoissonSolver::cal_u</references>
        <references refid="classvvm_1_1PoissonSolver_1ab342116991ca90ab52360e23009c67f3" compoundref="PoissonSolver_8cpp" startline="186" endline="478">vvm::PoissonSolver::cal_w</references>
        <references refid="classvvm_1a63672bc63f38db96f69e95819ccae586" compoundref="Declare_8hpp" startline="304">vvm::CASE</references>
        <references refid="classvvm_1_1MicroPhysics_1a431b1d1071a9ac4241d0674b34212301" compoundref="MicroPhysics_8cpp" startline="6" endline="25">vvm::MicroPhysics::condensation</references>
        <references refid="classvvm_1_1NumericalProcess_1a22efde16a6c3eded1751466f57e82562" compoundref="NumericalProcess_8cpp" startline="37" endline="45">vvm::NumericalProcess::DiffusionAll</references>
        <references refid="classvvm_1a9f15f33b8d04ec8a3cf7d9c9d9e31f8d" compoundref="Declare_8hpp" startline="282">vvm::dt</references>
        <references refid="classTimer_1a6a89a613c2af9b0d1e5f7e4ba9e46c54" compoundref="Timer_8hpp" startline="13" endline="16">Timer::elapsed</references>
        <references refid="classvvm_1_1MicroPhysics_1aac1b72d790610cced1b03b4f3eb0d159" compoundref="MicroPhysics_8cpp" startline="79" endline="113">vvm::MicroPhysics::evaporation</references>
        <references refid="classvvm_1_1MicroPhysics_1aff5f0dc202584c522dc22f107066471a" compoundref="MicroPhysics_8cpp" startline="115" endline="137">vvm::MicroPhysics::NegativeValueProcess</references>
        <references refid="classvvm_1_1Iteration_1a9398109dcdccfbfca4c2c3a457183658" compoundref="Iteration_8cpp" startline="96" endline="124">nextTimeStep</references>
        <references refid="classvvm_1_1NumericalProcess_1ad4b0db04db0fcd6dd1b455208e7c7e5f" compoundref="NumericalProcess_8cpp" startline="73" endline="82">vvm::NumericalProcess::Nudge_qv</references>
        <references refid="classvvm_1_1NumericalProcess_1a5be0fdbd879cd8d4344d5b4632ffc190" compoundref="NumericalProcess_8cpp" startline="47" endline="58">vvm::NumericalProcess::Nudge_theta</references>
        <references refid="classvvm_1_1NumericalProcess_1a2cb6c0d8bba6ff543745582847f55dd4" compoundref="NumericalProcess_8cpp" startline="60" endline="71">vvm::NumericalProcess::Nudge_zeta</references>
        <references refid="classvvm_1a54019773003b18a98f267df45ee230bb" compoundref="Declare_8hpp" startline="280">vvm::nx</references>
        <references refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" compoundref="Declare_8hpp" startline="281">vvm::nz</references>
        <references refid="classvvm_1_1Output_1a10cccdd582fb244e14041255d4b425f4" compoundref="Output_8cpp" startline="96" endline="216">vvm::Output::output_nc</references>
        <references refid="classvvm_1a545c68149a66dd6139abe3ec9db5d571" compoundref="Declare_8hpp" startline="291">vvm::OUTPUTSTEP</references>
        <references refid="classvvm_1_1PoissonSolver_1abcc07bc7fb43a3081b2a7d68c8a34782" compoundref="PoissonSolver_8cpp" startline="647" endline="659">vvm::PoissonSolver::pubarTop_pt</references>
        <references refid="classvvm_1a4aa22ea3e57d8899527556b2bd7f92fb" compoundref="Declare_8hpp" startline="373">vvm::qcp</references>
        <references refid="classvvm_1ae82e779827b9d2fac34c37ca944ba2f7" compoundref="Declare_8hpp" startline="376">vvm::qrp</references>
        <references refid="classvvm_1a345c7e128e6c8a81a3949456530a428a" compoundref="Declare_8hpp" startline="370">vvm::qvp</references>
        <references refid="classvvm_1_1Init_1a01fff35a3762057683d8c08f8342b655" compoundref="Init_8cpp" startline="426" endline="453">vvm::Init::RandomPerturbation</references>
        <references refid="classTimer_1a9020542d73357a4eef512eefaf57524b" compoundref="Timer_8hpp" startline="9" endline="11">Timer::reset</references>
        <references refid="classvvm_1_1Turbulence_1a2258bac424dc7581298e8550846823ab" compoundref="Turbulent_8cpp" startline="5" endline="57">vvm::Turbulence::RKM_RKH</references>
        <references refid="classvvm_1ac062ac68687e7171fd71da3236b2e6a9" compoundref="Declare_8hpp" startline="533">vvm::status_for_adding_forcing</references>
        <references refid="classvvm_1aa8b8e459803741da033d5bf4435130cc" compoundref="Declare_8hpp" startline="308">vvm::step</references>
        <references refid="classvvm_1a6da8bde9e35cbd4d0242a1db539ff9d3" compoundref="Declare_8hpp" startline="424">vvm::t_advection</references>
        <references refid="classvvm_1a6cf274889e58c910d0cb79588cb3b03d" compoundref="Declare_8hpp" startline="428">vvm::t_all</references>
        <references refid="classvvm_1a63eea4124e1ab27f9441360c526fd4e8" compoundref="Declare_8hpp" startline="426">vvm::t_diffusion</references>
        <references refid="classvvm_1a1f108d23ec3587e532064c2b5221a943" compoundref="Declare_8hpp" startline="427">vvm::t_microphysics</references>
        <references refid="classvvm_1a92eb62804aa9ea7060962c1aca528c5d" compoundref="Declare_8hpp" startline="425">vvm::t_poisson</references>
        <references refid="classvvm_1acd0f4e9a5879c3d2f93b64ba1d78318d" compoundref="Declare_8hpp" startline="288">vvm::TIMEEND</references>
        <references refid="classvvm_1_1NumericalProcess_1acd3b291db5ce2bfbb551114a1b2d1149" compoundref="NumericalProcess_8cpp" startline="25" endline="35">vvm::NumericalProcess::timeFilterAll</references>
        <references refid="classvvm_1a8109bfe33d1f5e47c58751ad054d7fc9" compoundref="Declare_8hpp" startline="289">vvm::TIMEROUTPUTSIZE</references>
        <referencedby refid="main_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="main_8cpp" startline="15" endline="90">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="classvvm_1_1Iteration_1a9398109dcdccfbfca4c2c3a457183658" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void vvm::Iteration::nextTimeStep</definition>
        <argsstring>(vvm &amp;model)</argsstring>
        <name>nextTimeStep</name>
        <qualifiedname>vvm::Iteration::nextTimeStep</qualifiedname>
        <param>
          <type><ref refid="classvvm" kindref="compound">vvm</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Declare.hpp" line="601" column="21" bodyfile="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Iteration.cpp" bodystart="96" bodyend="124"/>
        <references refid="classvvm_1a54019773003b18a98f267df45ee230bb" compoundref="Declare_8hpp" startline="280">vvm::nx</references>
        <references refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" compoundref="Declare_8hpp" startline="281">vvm::nz</references>
        <references refid="classvvm_1a2e358a42bc3c08a8bd162e5d600d743d" compoundref="Declare_8hpp" startline="374">vvm::qc</references>
        <references refid="classvvm_1a84a7559c5181efa5298bb52a9590ffed" compoundref="Declare_8hpp" startline="375">vvm::qcm</references>
        <references refid="classvvm_1a4aa22ea3e57d8899527556b2bd7f92fb" compoundref="Declare_8hpp" startline="373">vvm::qcp</references>
        <references refid="classvvm_1ae8846fd38da9bfa59aca4c30b80f4827" compoundref="Declare_8hpp" startline="377">vvm::qr</references>
        <references refid="classvvm_1ac7f8c144268c93330663189e886459db" compoundref="Declare_8hpp" startline="378">vvm::qrm</references>
        <references refid="classvvm_1ae82e779827b9d2fac34c37ca944ba2f7" compoundref="Declare_8hpp" startline="376">vvm::qrp</references>
        <references refid="classvvm_1ae463dcd6a3bd5edcb0057346216a2ee9" compoundref="Declare_8hpp" startline="371">vvm::qv</references>
        <references refid="classvvm_1ac2a3231c8911361e30eacdc4a1b3327f" compoundref="Declare_8hpp" startline="372">vvm::qvm</references>
        <references refid="classvvm_1a345c7e128e6c8a81a3949456530a428a" compoundref="Declare_8hpp" startline="370">vvm::qvp</references>
        <references refid="classvvm_1a590abe748fc6d7ee9c24108100db04a9" compoundref="Declare_8hpp" startline="340">vvm::th</references>
        <references refid="classvvm_1a37ff81702e9ae1cdae172a6fbd6fe57e" compoundref="Declare_8hpp" startline="341">vvm::thm</references>
        <references refid="classvvm_1ae9b64ac44720501013d0f18fd774474d" compoundref="Declare_8hpp" startline="339">vvm::thp</references>
        <references refid="classvvm_1a15f5bebeb59fa99feedd3945e7cd7669" compoundref="Declare_8hpp" startline="310">vvm::ubarTop</references>
        <references refid="classvvm_1a418daede3a9c0ed998842ff792647f2f" compoundref="Declare_8hpp" startline="311">vvm::ubarTopm</references>
        <references refid="classvvm_1a2494ade44221bcd3aed164d73bf208f4" compoundref="Declare_8hpp" startline="309">vvm::ubarTopp</references>
        <references refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" compoundref="Declare_8hpp" startline="337">vvm::zeta</references>
        <references refid="classvvm_1a9940c24c524df0c0bcfa1f009857e4cd" compoundref="Declare_8hpp" startline="338">vvm::zetam</references>
        <references refid="classvvm_1a44e87b0393bbb303fe26c12b4defc572" compoundref="Declare_8hpp" startline="336">vvm::zetap</references>
        <referencedby refid="classvvm_1_1Iteration_1aad30e493dc2f262d8349e7832828a4db" compoundref="Iteration_8cpp" startline="128" endline="246">TimeMarching</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>vvm::Iteration</label>
        <link refid="classvvm_1_1Iteration"/>
      </node>
    </collaborationgraph>
    <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Declare.hpp" line="589" column="5" bodyfile="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Declare.hpp" bodystart="589" bodyend="602"/>
    <listofallmembers>
      <member refid="classvvm_1_1Iteration_1a9398109dcdccfbfca4c2c3a457183658" prot="public" virt="non-virtual"><scope>vvm::Iteration</scope><name>nextTimeStep</name></member>
      <member refid="classvvm_1_1Iteration_1ae8867dc15d6fbcd551f22a4c3cf6155f" prot="public" virt="non-virtual"><scope>vvm::Iteration</scope><name>pqc_pt</name></member>
      <member refid="classvvm_1_1Iteration_1a01e3bb04b6aefce6bddc3378a1b1e97d" prot="public" virt="non-virtual"><scope>vvm::Iteration</scope><name>pqr_pt</name></member>
      <member refid="classvvm_1_1Iteration_1ac37b1be7be4bb8ba81a9232f85066ca2" prot="public" virt="non-virtual"><scope>vvm::Iteration</scope><name>pqv_pt</name></member>
      <member refid="classvvm_1_1Iteration_1a06f21fc868772f20f7c9e6241a5cf3b1" prot="public" virt="non-virtual"><scope>vvm::Iteration</scope><name>pth_pt</name></member>
      <member refid="classvvm_1_1Iteration_1ad13b77906e852185c8b1b2db00475049" prot="public" virt="non-virtual"><scope>vvm::Iteration</scope><name>pzeta_pt</name></member>
      <member refid="classvvm_1_1Iteration_1aad30e493dc2f262d8349e7832828a4db" prot="public" virt="non-virtual"><scope>vvm::Iteration</scope><name>TimeMarching</name></member>
      <member refid="classvvm_1_1Iteration_1ae70278e6ede67ab538bda7e6eb7f4aef" prot="public" virt="non-virtual"><scope>vvm::Iteration</scope><name>updateMean</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
