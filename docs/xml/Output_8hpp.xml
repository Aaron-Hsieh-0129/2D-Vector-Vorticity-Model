<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="Output_8hpp" kind="file" language="C++">
    <compoundname>Output.hpp</compoundname>
    <includes refid="Init_8hpp" local="yes">Init.hpp</includes>
    <includes local="no">netcdf</includes>
    <includedby refid="Iteration_8hpp" local="yes">/home/Aaron/2DVVM/full/0402/model/src/Iteration.hpp</includedby>
    <includedby refid="Output_8cpp" local="yes">/home/Aaron/2DVVM/full/0402/model/src/Output.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>../include/Eigen/Sparse</label>
      </node>
      <node id="5">
        <label>Config.hpp</label>
        <link refid="Config_8hpp"/>
      </node>
      <node id="4">
        <label>Const.hpp</label>
        <link refid="Const_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Declare.hpp</label>
        <link refid="Declare_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Init.hpp</label>
        <link refid="Init_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/Aaron/2DVVM/full/0402/model/src/Output.hpp</label>
        <link refid="Output_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>netcdf</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/Aaron/2DVVM/full/0402/model/src/Iteration.cpp</label>
        <link refid="Iteration_8cpp"/>
      </node>
      <node id="2">
        <label>/home/Aaron/2DVVM/full/0402/model/src/Iteration.hpp</label>
        <link refid="Iteration_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/Aaron/2DVVM/full/0402/model/src/Output.cpp</label>
        <link refid="Output_8cpp"/>
      </node>
      <node id="1">
        <label>/home/Aaron/2DVVM/full/0402/model/src/Output.hpp</label>
        <link refid="Output_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/Aaron/2DVVM/full/0402/model/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classOutput" prot="public">Output</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Init_8hpp" kindref="compound">Init.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netcdf&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="classOutput" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classOutput" kindref="compound">Output</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOutput_1ac9377ae1019ac4ee88877197685d19fe" kindref="member">printInit</ref>(<ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOutput_1a4a0eecfc03693584192bc8e78c2f872b" kindref="member">create_all_directory</ref>();</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(OUTPUTNC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOutput_1a29f4af25257a72a15b771089d806fbb3" kindref="member">output_nc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(OUTPUTTXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>output_zeta(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>output_th(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>output_u(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>output_w(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(WATER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>output_qv(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>output_qc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>output_qr(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>output_precip(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>output_precipAcc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>create_directory(std::string);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/Aaron/2DVVM/full/0402/model/src/Output.hpp"/>
  </compounddef>
</doxygen>
