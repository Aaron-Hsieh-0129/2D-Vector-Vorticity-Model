<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="Output_8cpp" kind="file" language="C++">
    <compoundname>Output.cpp</compoundname>
    <includes refid="Output_8hpp" local="yes">Output.hpp</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">netcdf</includes>
    <incdepgraph>
      <node id="7">
        <label>../include/Eigen/Sparse</label>
      </node>
      <node id="6">
        <label>Config.hpp</label>
        <link refid="Config_8hpp"/>
      </node>
      <node id="5">
        <label>Const.hpp</label>
        <link refid="Const_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Declare.hpp</label>
        <link refid="Declare_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Init.hpp</label>
        <link refid="Init_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/Aaron/2DVVM/full/0402/model/src/Output.cpp</label>
        <link refid="Output_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Output.hpp</label>
        <link refid="Output_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>fstream</label>
      </node>
      <node id="9">
        <label>iomanip</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>netcdf</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacestd">std</innernamespace>
    <innernamespace refid="namespacenetCDF">netCDF</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Output_8hpp" kindref="compound">Output.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netcdf&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="8" refid="classOutput_1ac9377ae1019ac4ee88877197685d19fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOutput_1ac9377ae1019ac4ee88877197685d19fe" kindref="member">Output::printInit</ref>(<ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;z<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thb_zeta<sp/><sp/><sp/><sp/><sp/>rhou<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhow<sp/><sp/><sp/><sp/><sp/><sp/><sp/>qvb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RH<sp/><sp/><sp/><sp/><sp/><sp/>pib&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-1;k++){</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>(double)<sp/>(k<sp/>-<sp/>0.5)<sp/>*<sp/><ref refid="Config_8hpp_1af96a657aa0277ecc723296cc70efd9f4" kindref="member">dz</ref><sp/>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setprecision(4)<sp/>&lt;&lt;<sp/>z<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a7725cca3f943224b5878255f97a5bcfd" kindref="member">thb</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a4af2d0685fff1ca80719520000435a72" kindref="member">thb_zeta</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a460b941aba46eeaf9d777d93ec472cc1" kindref="member">rhou</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8f250b15a87e5698b512aed8c52ca1fa" kindref="member">rhow</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a13d01725e31e43adb064e132d1c02516" kindref="member">qvb</ref>[k]<sp/>*<sp/>1000<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a13d01725e31e43adb064e132d1c02516" kindref="member">qvb</ref>[k]<sp/>/<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a128c6144ffb235b49bcdebf85c0ce8e9" kindref="member">qvsb</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af3b16daf7541428d52fabed88807430c" kindref="member">pib</ref>[k]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>initout;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>initName<sp/>=<sp/><ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;init.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>initout.open(initName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-1;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>(double)<sp/>(k<sp/>-<sp/>0.5)<sp/>*<sp/><ref refid="Config_8hpp_1af96a657aa0277ecc723296cc70efd9f4" kindref="member">dz</ref><sp/>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initout<sp/>&lt;&lt;<sp/>z<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a7725cca3f943224b5878255f97a5bcfd" kindref="member">thb</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a460b941aba46eeaf9d777d93ec472cc1" kindref="member">rhou</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8f250b15a87e5698b512aed8c52ca1fa" kindref="member">rhow</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a13d01725e31e43adb064e132d1c02516" kindref="member">qvb</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a128c6144ffb235b49bcdebf85c0ce8e9" kindref="member">qvsb</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a13d01725e31e43adb064e132d1c02516" kindref="member">qvb</ref>[k]<sp/>/<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a128c6144ffb235b49bcdebf85c0ce8e9" kindref="member">qvsb</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af3b16daf7541428d52fabed88807430c" kindref="member">pib</ref>[k]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(OUTPUTNC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">netCDF;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classOutput_1a29f4af25257a72a15b771089d806fbb3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOutput_1a29f4af25257a72a15b771089d806fbb3" kindref="member">Output::output_nc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ncName<sp/>=<sp/><ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;nc/&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.nc&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>NcFile<sp/>dataFile(ncName,<sp/>NcFile::replace);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>netCDF<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>NcDim<sp/>xDim<sp/>=<sp/>dataFile.addDim(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>NcDim<sp/>zDim<sp/>=<sp/>dataFile.addDim(</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;NcDim&gt;<sp/>xzDim,<sp/>zNcDim;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>xzDim.push_back(xDim);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>xzDim.push_back(zDim);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>zNcDim.push_back(zDim);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>NcVar<sp/>thData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;th&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>xzDim);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>NcVar<sp/>zetaData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;zeta&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>xzDim);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>NcVar<sp/>uData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>xzDim);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>NcVar<sp/>wData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>xzDim);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>thData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1add34568af43cf188bec69d61cc9c5bee" kindref="member">th</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>zetaData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1a7a6273bb2bd701445f7f3e42c244e0" kindref="member">zeta</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>uData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ad7c0652b11cf78af50e5b03e593e1774" kindref="member">u</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>wData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a42bbd446ef820ca6930ed4c727cf17ea" kindref="member">w</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(WATER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>qcData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;qc&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>xzDim);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>qrData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;qr&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>xzDim);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>qvData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;qv&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>xzDim);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>qrAccData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;qrAcc&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>xDim);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>precipData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;precip&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>xDim);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>accretionData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;accretion&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>xzDim);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>autoconversionData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;autoconversion&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>xzDim);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>evaporationData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;evaporation&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>xzDim);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qcData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af7d6790d6bca3b09918e06fb7362220e" kindref="member">qc</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qrData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ab5e5009447f9f2a9f8497baada78175d" kindref="member">qr</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qvData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1abea7eda17bdb83b23d16d901c35c1f96" kindref="member">qv</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qrAccData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a7243b4de829e5b18f6e92248a37a6069" kindref="member">qrAcc</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>precipData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a63095564c677502c49dae2d69d24e317" kindref="member">precip</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accretionData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ad6e341d145021d01fd4ebca79787240e" kindref="member">accretion</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>autoconversionData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1aacc9ca191f0c94b063ad84e44951eb69" kindref="member">autoconversion</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evaporationData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ae1a38973a7dfe7577f47cc41fc5e66b0" kindref="member">evaporation</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>thbData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;tb&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>zNcDim);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>rhouData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;rhou&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>zNcDim);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>rhowData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;rhow&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>zNcDim);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>qvbData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;qvb&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>zNcDim);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NcVar<sp/>qvsbData<sp/>=<sp/>dataFile.addVar(</highlight><highlight class="stringliteral">&quot;qvsb&quot;</highlight><highlight class="normal">,<sp/>ncDouble,<sp/>zNcDim);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thbData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a7725cca3f943224b5878255f97a5bcfd" kindref="member">thb</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhouData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a460b941aba46eeaf9d777d93ec472cc1" kindref="member">rhou</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhowData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8f250b15a87e5698b512aed8c52ca1fa" kindref="member">rhow</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qvbData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a13d01725e31e43adb064e132d1c02516" kindref="member">qvb</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qvsbData.putVar(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a128c6144ffb235b49bcdebf85c0ce8e9" kindref="member">qvsb</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Output::create_directory(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>directory_name)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mkdir<sp/>-p<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>directory_name;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command<sp/>=<sp/>str.c_str();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir_err<sp/>=<sp/>system(command);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-1<sp/>==<sp/>dir_err)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>on<sp/>creating<sp/>directory!\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classOutput_1a4a0eecfc03693584192bc8e78c2f872b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classOutput_1a4a0eecfc03693584192bc8e78c2f872b" kindref="member">Output::create_all_directory</ref>()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>OUTPUTNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(<ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;nc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(OUTPUTTXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(<ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(<ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(<ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(<ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/zeta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(<ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/th&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(WATER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(<ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/qc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(<ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/qr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(<ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/qv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(<ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/precip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(<ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/precipAcc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plot<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>create_directory(<ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;graphs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(OUTPUTTXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Output::output_zeta(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutzeta;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>zetaName<sp/>=<sp/><ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/zeta/zeta_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>foutzeta.open(zetaName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutzeta<sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1a7a6273bb2bd701445f7f3e42c244e0" kindref="member">zeta</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Output::output_th(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutth;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>thName<sp/>=<sp/><ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/th/th_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>foutth.open(thName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutth<sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1add34568af43cf188bec69d61cc9c5bee" kindref="member">th</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Output::output_u(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutu;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>uName<sp/>=<sp/><ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/u/u_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>foutu.open(uName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutu<sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ad7c0652b11cf78af50e5b03e593e1774" kindref="member">u</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Output::output_w(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutw;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>wName<sp/>=<sp/><ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/w/w_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>foutw.open(wName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutw<sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a42bbd446ef820ca6930ed4c727cf17ea" kindref="member">w</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Output::output_qv(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutqv;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>qvName<sp/>=<sp/><ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/qv/qv_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqv.open(qvName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutqv<sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1abea7eda17bdb83b23d16d901c35c1f96" kindref="member">qv</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Output::output_qc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutqc;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>qcName<sp/>=<sp/><ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/qc/qc_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqc.open(qcName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutqc<sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af7d6790d6bca3b09918e06fb7362220e" kindref="member">qc</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Output::output_qr(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutqr;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>qrName<sp/>=<sp/><ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/qr/qr_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqr.open(qrName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutqr<sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ab5e5009447f9f2a9f8497baada78175d" kindref="member">qr</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Output::output_precip(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutqr;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>qrName<sp/>=<sp/><ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/precip/precip_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqr.open(qrName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutqr<sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a63095564c677502c49dae2d69d24e317" kindref="member">precip</ref>[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Output::output_precipAcc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutqr;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>qrName<sp/>=<sp/><ref refid="Config_8hpp_1a92f0c8368faf269de7f26d6a6847642e" kindref="member">OUTPUTPATH</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/precip/precipAll_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqr.open(qrName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutqr<sp/>&lt;&lt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a7243b4de829e5b18f6e92248a37a6069" kindref="member">qrAcc</ref>[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/Aaron/2DVVM/full/0402/model/src/Output.cpp"/>
  </compounddef>
</doxygen>
