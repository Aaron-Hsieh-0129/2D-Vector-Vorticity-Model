<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="Output_8cpp" kind="file" language="C++">
    <compoundname>Output.cpp</compoundname>
    <includes refid="Declare_8hpp" local="yes">Declare.hpp</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">netcdf</includes>
    <incdepgraph>
      <node id="3">
        <label>Config.hpp</label>
        <link refid="Config_8hpp"/>
      </node>
      <node id="2">
        <label>Declare.hpp</label>
        <link refid="Declare_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Output.cpp</label>
        <link refid="Output_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Eigen/Sparse</label>
      </node>
      <node id="8">
        <label>fstream</label>
      </node>
      <node id="6">
        <label>iomanip</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>netcdf</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacestd">std</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Declare_8hpp" kindref="compound">Declare.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netcdf&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="8" refid="classvvm_1_1Output_1a331915125669cff07bc8fb2d6f3640df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1Output_1a331915125669cff07bc8fb2d6f3640df" kindref="member">vvm::Output::printInit</ref>(<ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classvvm_1a70455ffa8f9a2d564947bf7b3bfd3818" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;z<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thb_zeta<sp/><sp/><sp/><sp/><sp/>rhou<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhow<sp/><sp/><sp/><sp/><sp/><sp/><sp/>qvb<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RH<sp/><sp/><sp/><sp/><sp/><sp/>pib&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-1;k++){</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvvm_1a70455ffa8f9a2d564947bf7b3bfd3818" kindref="member">z</ref><sp/>=<sp/>(double)<sp/>(k<sp/>-<sp/>0.5)<sp/>*<sp/>model.<ref refid="classvvm_1aa10689462c2d23ff7514d71e1b44f272" kindref="member">dz</ref><sp/>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setprecision(4)<sp/>&lt;&lt;<sp/><ref refid="classvvm_1a70455ffa8f9a2d564947bf7b3bfd3818" kindref="member">z</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a07e5c32b8b9f7f31ba90c29c6e11adfa" kindref="member">thb</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a7521c72c09b92ebed7d84d5ec6cab411" kindref="member">thb_zeta</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a4196b3b03002394826deea7481714e78" kindref="member">qvb</ref>[k]<sp/>*<sp/>1000<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a4196b3b03002394826deea7481714e78" kindref="member">qvb</ref>[k]<sp/>/<sp/>model.<ref refid="classvvm_1aef52e76881cd361c58834b560f002573" kindref="member">qvsb</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a26af306441d528502bb043bde41c1d4f" kindref="member">pib</ref>[k]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>initout;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>initName<sp/>=<sp/>model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;init.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>initout.open(initName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;=<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-1;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvvm_1a70455ffa8f9a2d564947bf7b3bfd3818" kindref="member">z</ref><sp/>=<sp/>(double)<sp/>(k<sp/>-<sp/>0.5)<sp/>*<sp/>model.<ref refid="classvvm_1aa10689462c2d23ff7514d71e1b44f272" kindref="member">dz</ref><sp/>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initout<sp/>&lt;&lt;<sp/><ref refid="classvvm_1a70455ffa8f9a2d564947bf7b3bfd3818" kindref="member">z</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a07e5c32b8b9f7f31ba90c29c6e11adfa" kindref="member">thb</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1af25e3367c5ad1d011c15ff7d774a0abf" kindref="member">rhou</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a7edff5662fbdb8df0fe3094a6ab3efb7" kindref="member">rhow</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a4196b3b03002394826deea7481714e78" kindref="member">qvb</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1aef52e76881cd361c58834b560f002573" kindref="member">qvsb</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a4196b3b03002394826deea7481714e78" kindref="member">qvb</ref>[k]<sp/>/<sp/>model.<ref refid="classvvm_1aef52e76881cd361c58834b560f002573" kindref="member">qvsb</ref>[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a26af306441d528502bb043bde41c1d4f" kindref="member">pib</ref>[k]<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>initout.close();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(OUTPUTNC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">netCDF;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkErr(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/>NC_NOERR)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NetCDF<sp/>error<sp/>at<sp/>line<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>line<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nc_strerror(status)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vvm::Output::output_nc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ncName<sp/>=<sp/>model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;nc/&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.nc&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncid,<sp/>x_dimid,<sp/>z_dimid;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thid,<sp/>zetaid,<sp/>uid,<sp/>wid,<sp/>ubarTopid;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_create(ncName.c_str(),<sp/>NC_CLOBBER,<sp/>&amp;ncid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_dim(ncid,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>&amp;x_dimid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_dim(ncid,<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">,<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>,<sp/>&amp;z_dimid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimids[2]<sp/>=<sp/>{x_dimid,<sp/>z_dimid};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimx1d[1]<sp/>=<sp/>{x_dimid};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimz1d[1]<sp/>=<sp/>{z_dimid};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;th&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>2,<sp/>dimids,<sp/>&amp;thid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;zeta&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>2,<sp/>dimids,<sp/>&amp;zetaid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>2,<sp/>dimids,<sp/>&amp;uid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>2,<sp/>dimids,<sp/>&amp;wid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;ubarTop&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;ubarTopid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(WATER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qvid,<sp/>qcid,<sp/>qrid,<sp/>precipid,<sp/>accretionid,<sp/>autoconversionid,<sp/>evaporationid,<sp/>condensationid;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;qv&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>2,<sp/>dimids,<sp/>&amp;qvid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;qc&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>2,<sp/>dimids,<sp/>&amp;qcid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;qr&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>2,<sp/>dimids,<sp/>&amp;qrid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;accretion&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>2,<sp/>dimids,<sp/>&amp;accretionid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;autoconversion&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>2,<sp/>dimids,<sp/>&amp;autoconversionid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;evaporation&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>2,<sp/>dimids,<sp/>&amp;evaporationid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;condensation&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>2,<sp/>dimids,<sp/>&amp;condensationid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;precip&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>1,<sp/>dimx1d,<sp/>&amp;precipid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_enddef(ncid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>thid,<sp/>model.<ref refid="classvvm_1aa65f3d5ec5b627f08c3c5a5294bfa135" kindref="member">thcont</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>zetaid,<sp/>model.<ref refid="classvvm_1a6ff8cc62cea6d4823731d1c5b9260074" kindref="member">zetacont</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>uid,<sp/>model.<ref refid="classvvm_1a845d10359953759f1135d29e74c7d82d" kindref="member">ucont</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>wid,<sp/>model.<ref refid="classvvm_1a13c2178b5683fa114591410928b8a201" kindref="member">wcont</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>ubarTopid,<sp/>&amp;model.<ref refid="classvvm_1a2494ade44221bcd3aed164d73bf208f4" kindref="member">ubarTopp</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(WATER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>qvid,<sp/>model.<ref refid="classvvm_1a89982cb9081f819ee8664c3a50def862" kindref="member">qvcont</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>qcid,<sp/>model.<ref refid="classvvm_1a4771eb942a9133dd15508402f781b87a" kindref="member">qccont</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>qrid,<sp/>model.<ref refid="classvvm_1a84aa7b5b7f188e6bc178f08001851cb5" kindref="member">qrcont</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>accretionid,<sp/>model.<ref refid="classvvm_1a1a707b985656fff372d9b4cf1e660f75" kindref="member">accretioncont</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>autoconversionid,<sp/>model.<ref refid="classvvm_1ad0ea2312e3b120cebf4171ead02812f0" kindref="member">autoconversioncont</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>evaporationid,<sp/>model.<ref refid="classvvm_1ae83cfc04df140eb27ea8451952ac4a2c" kindref="member">evaporationcont</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>condensationid,<sp/>model.<ref refid="classvvm_1a6c26d94dd59831d96233d90e28907f10" kindref="member">condensationcont</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>precipid,<sp/>model.<ref refid="classvvm_1aa6f154abb97ec14856d347f417c7370e" kindref="member">precip</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_close(ncid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vvm::Output::output_time_nc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ncName<sp/>=<sp/>model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;timer/&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.nc&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncid,<sp/>t_dimid;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>advectionid,<sp/>poissonid,<sp/>diffusionid,<sp/>microphysicsid,<sp/>allid;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_create(ncName.c_str(),<sp/>NC_CLOBBER,<sp/>&amp;ncid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_dim(ncid,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>,<sp/>&amp;t_dimid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimt1d[1]<sp/>=<sp/>{t_dimid};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;advection&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>1,<sp/>dimt1d,<sp/>&amp;advectionid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;poisson&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>1,<sp/>dimt1d,<sp/>&amp;advectionid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;diffusion&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>1,<sp/>dimt1d,<sp/>&amp;advectionid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;microphysics&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>1,<sp/>dimt1d,<sp/>&amp;advectionid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_def_var(ncid,<sp/></highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">,<sp/>NC_DOUBLE,<sp/>1,<sp/>dimt1d,<sp/>&amp;advectionid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>advectionid,<sp/>model.<ref refid="classvvm_1a6da8bde9e35cbd4d0242a1db539ff9d3" kindref="member">t_advection</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>poissonid,<sp/>model.<ref refid="classvvm_1a92eb62804aa9ea7060962c1aca528c5d" kindref="member">t_poisson</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>diffusionid,<sp/>model.<ref refid="classvvm_1a63eea4124e1ab27f9441360c526fd4e8" kindref="member">t_diffusion</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>microphysicsid,<sp/>model.<ref refid="classvvm_1a1f108d23ec3587e532064c2b5221a943" kindref="member">t_microphysics</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_put_var_double(ncid,<sp/>allid,<sp/>model.<ref refid="classvvm_1a6cf274889e58c910d0cb79588cb3b03d" kindref="member">t_all</ref>)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((retval<sp/>=<sp/>nc_close(ncid)))<sp/>checkErr(retval,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classvvm_1_1Output_1ab8764acf44928bde7135754db12fd3ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1Output_1ab8764acf44928bde7135754db12fd3ec" kindref="member">vvm::Output::create_directory</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>directory_name)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mkdir<sp/>-p<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>directory_name;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*command<sp/>=<sp/>str.c_str();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir_err<sp/>=<sp/>system(command);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-1<sp/>==<sp/>dir_err)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>on<sp/>creating<sp/>directory!\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classvvm_1_1Output_1ab92886c8eb037ae04f2201b6daf76364" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1Output_1ab92886c8eb037ae04f2201b6daf76364" kindref="member">vvm::Output::create_all_directory</ref>(<ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>OUTPUTNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;nc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;timer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(OUTPUTTXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/u&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/zeta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/th&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(WATER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/qc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/qr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/qv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/precip&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/precipAcc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plot<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>create_directory(model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/></highlight><highlight class="stringliteral">&quot;graphs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(OUTPUTTXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classvvm_1_1Output_1a6caa85f73521cd17c7f3ed23d4c8b5a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1Output_1a6caa85f73521cd17c7f3ed23d4c8b5a2" kindref="member">vvm::Output::output_zeta</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutzeta;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>zetaName<sp/>=<sp/>model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/zeta/zeta_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>foutzeta.open(zetaName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutzeta<sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a9543af4d64a67a22aa91dcca6d1906c6" kindref="member">zeta</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>foutzeta.close();</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classvvm_1_1Output_1ab51fce61c255955e0650eff5f5916343" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1Output_1ab51fce61c255955e0650eff5f5916343" kindref="member">vvm::Output::output_th</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutth;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>thName<sp/>=<sp/>model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/th/th_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>foutth.open(thName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutth<sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a590abe748fc6d7ee9c24108100db04a9" kindref="member">th</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutth<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>foutth.close();</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classvvm_1_1Output_1aeb2d8af7daa1e0f4831d2e04b958d56d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1Output_1aeb2d8af7daa1e0f4831d2e04b958d56d" kindref="member">vvm::Output::output_u</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutu;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>uName<sp/>=<sp/>model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/u/u_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>foutu.open(uName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutu<sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a1ac0d1c50fc3935a312b6f667a1c34c0" kindref="member">u</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutu<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>foutu.close();</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="classvvm_1_1Output_1afbde85f14cd81ebc5cebe952c8111529" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1Output_1afbde85f14cd81ebc5cebe952c8111529" kindref="member">vvm::Output::output_w</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutw;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>wName<sp/>=<sp/>model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/w/w_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>foutw.open(wName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutw<sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a03a120f9647d1b680a8552a1743f47bf" kindref="member">w</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutw<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>foutw.close();</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WATER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classvvm_1_1Output_1a30d7597e6d2fd9992b7db133efafb128" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1Output_1a30d7597e6d2fd9992b7db133efafb128" kindref="member">vvm::Output::output_qv</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutqv;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>qvName<sp/>=<sp/>model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/qv/qv_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqv.open(qvName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutqv<sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1ae463dcd6a3bd5edcb0057346216a2ee9" kindref="member">qv</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutqv<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqv.close();</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="classvvm_1_1Output_1a8ca5baef616be9f2e06b6ee8af772eff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1Output_1a8ca5baef616be9f2e06b6ee8af772eff" kindref="member">vvm::Output::output_qc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutqc;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>qcName<sp/>=<sp/>model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/qc/qc_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqc.open(qcName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutqc<sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1a2e358a42bc3c08a8bd162e5d600d743d" kindref="member">qc</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutqc<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqc.close();</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classvvm_1_1Output_1a9bf592fbb28d83012045563a19022586" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1Output_1a9bf592fbb28d83012045563a19022586" kindref="member">vvm::Output::output_qr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutqr;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>qrName<sp/>=<sp/>model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/qr/qr_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqr.open(qrName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>model.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutqr<sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1ae8846fd38da9bfa59aca4c30b80f4827" kindref="member">qr</ref>[i][k]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutqr<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqr.close();</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classvvm_1_1Output_1ae029629b6416015680a67b199d9f8b52" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1Output_1ae029629b6416015680a67b199d9f8b52" kindref="member">vvm::Output::output_precip</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fstream<sp/>foutqr;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>qrName<sp/>=<sp/>model.<ref refid="classvvm_1a04ef9b52415cb1221f6c7d05f334aa72" kindref="member">outputpath</ref><sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;txtoutputs/precip/precip_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(n)<sp/>+<sp/>(string)<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqr.open(qrName,<sp/>std::ios::out);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>model.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foutqr<sp/>&lt;&lt;<sp/>model.<ref refid="classvvm_1aa6f154abb97ec14856d347f417c7370e" kindref="member">precip</ref>[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>foutqr.close();</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="classvvm_1_1Output_1a93646479d0835937618e7571ffb87c98" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1Output_1a93646479d0835937618e7571ffb87c98" kindref="member">vvm::Output::outputalltxt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;model)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvvm_1_1Output_1a6caa85f73521cd17c7f3ed23d4c8b5a2" kindref="member">vvm::Output::output_zeta</ref>(n,<sp/>model);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvvm_1_1Output_1ab51fce61c255955e0650eff5f5916343" kindref="member">vvm::Output::output_th</ref>(n,<sp/>model);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvvm_1_1Output_1aeb2d8af7daa1e0f4831d2e04b958d56d" kindref="member">vvm::Output::output_u</ref>(n,<sp/>model);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvvm_1_1Output_1afbde85f14cd81ebc5cebe952c8111529" kindref="member">vvm::Output::output_w</ref>(n,<sp/>model);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(WATER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvvm_1_1Output_1a30d7597e6d2fd9992b7db133efafb128" kindref="member">vvm::Output::output_qv</ref>(n,<sp/>model);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvvm_1_1Output_1a8ca5baef616be9f2e06b6ee8af772eff" kindref="member">vvm::Output::output_qc</ref>(n,<sp/>model);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvvm_1_1Output_1a9bf592fbb28d83012045563a19022586" kindref="member">vvm::Output::output_qr</ref>(n,<sp/>model);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvvm_1_1Output_1ae029629b6416015680a67b199d9f8b52" kindref="member">vvm::Output::output_precip</ref>(n,<sp/>model);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/src/Output.cpp"/>
  </compounddef>
</doxygen>
