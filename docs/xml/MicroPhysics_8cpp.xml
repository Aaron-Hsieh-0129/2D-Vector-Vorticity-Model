<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="MicroPhysics_8cpp" kind="file" language="C++">
    <compoundname>MicroPhysics.cpp</compoundname>
    <includes refid="Declare_8hpp" local="yes">Declare.hpp</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="5">
        <label>../include/Eigen/Sparse</label>
      </node>
      <node id="4">
        <label>Config.hpp</label>
        <link refid="Config_8hpp"/>
      </node>
      <node id="3">
        <label>Const.hpp</label>
        <link refid="Const_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Declare.hpp</label>
        <link refid="Declare_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/Aaron/2DVVM/full/0402/model/src/MicroPhysics.cpp</label>
        <link refid="MicroPhysics_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Declare_8hpp" kindref="compound">Declare.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(WATER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="classvvm_1_1MicroPhysics_1a0e14e9f52aabebc378538378e39da16f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1MicroPhysics_1a0e14e9f52aabebc378538378e39da16f" kindref="member">vvm::MicroPhysics::condensation</ref>(<ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qvs<sp/>=<sp/>0.,<sp/>phi<sp/>=<sp/>0.,<sp/>C<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-2;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pc<sp/>=<sp/>380.<sp/>/<sp/>(pow(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af3b16daf7541428d52fabed88807430c" kindref="member">pib</ref>[k],<sp/><ref refid="Const_8hpp_1a04232fb1dd2fa2aa27b1cc841de87e8b" kindref="member">C_p</ref><sp/>/<sp/><ref refid="Const_8hpp_1a9151700714b0ec53aa32af2f907d0a99" kindref="member">Rd</ref>)<sp/>*<sp/><ref refid="Const_8hpp_1a1583b00a62bc1138f99bbfcd8ef81a6a" kindref="member">P0</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>coefficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>-2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qvs<sp/>=<sp/>pc<sp/>*<sp/>exp(17.27<sp/>*<sp/>(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af3b16daf7541428d52fabed88807430c" kindref="member">pib</ref>[k]<sp/>*<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a3b3860b805e1f0e21f0834537a1d4feb" kindref="member">thp</ref>[i][k]<sp/>-<sp/>273.)<sp/>/<sp/>(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af3b16daf7541428d52fabed88807430c" kindref="member">pib</ref>[k]<sp/>*<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a3b3860b805e1f0e21f0834537a1d4feb" kindref="member">thp</ref>[i][k]<sp/>-<sp/>36.));</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phi<sp/>=<sp/>qvs<sp/>*<sp/>(17.27<sp/>*<sp/>237.<sp/>*<sp/><ref refid="Const_8hpp_1a40d8d9faeac7bd5d4cee0beff9e019a5" kindref="member">Lv</ref>)<sp/>/<sp/>(<ref refid="Const_8hpp_1a04232fb1dd2fa2aa27b1cc841de87e8b" kindref="member">C_p</ref><sp/>*<sp/>pow(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a3b3860b805e1f0e21f0834537a1d4feb" kindref="member">thp</ref>[i][k]<sp/>*<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af3b16daf7541428d52fabed88807430c" kindref="member">pib</ref>[k]<sp/>-<sp/>36.,<sp/>2));</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C<sp/>=<sp/>(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ab2102a76763307034e6e6a65bf2716af" kindref="member">qvp</ref>[i][k]<sp/>-<sp/>qvs)<sp/>/<sp/>(1<sp/>+<sp/>phi);<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>C<sp/>should<sp/>less<sp/>than<sp/>qc<sp/>(C<sp/>can<sp/>be<sp/>sink<sp/>for<sp/>qc<sp/>and<sp/>source<sp/>for<sp/>qv,<sp/>so<sp/>it<sp/>should<sp/>not<sp/>excess<sp/>qc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(C)<sp/>&gt;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8fb6dd58f0dae8301f414f4d2fccf60f" kindref="member">qcp</ref>[i][k]<sp/>&amp;&amp;<sp/>C<sp/>&lt;<sp/>0)<sp/>C<sp/>=<sp/>-<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8fb6dd58f0dae8301f414f4d2fccf60f" kindref="member">qcp</ref>[i][k];</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ab2102a76763307034e6e6a65bf2716af" kindref="member">qvp</ref>[i][k]<sp/>=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ab2102a76763307034e6e6a65bf2716af" kindref="member">qvp</ref>[i][k]<sp/>-<sp/>C;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8fb6dd58f0dae8301f414f4d2fccf60f" kindref="member">qcp</ref>[i][k]<sp/>=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8fb6dd58f0dae8301f414f4d2fccf60f" kindref="member">qcp</ref>[i][k]<sp/>+<sp/>C;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a3b3860b805e1f0e21f0834537a1d4feb" kindref="member">thp</ref>[i][k]<sp/>=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a3b3860b805e1f0e21f0834537a1d4feb" kindref="member">thp</ref>[i][k]<sp/>+<sp/><ref refid="Const_8hpp_1a40d8d9faeac7bd5d4cee0beff9e019a5" kindref="member">Lv</ref><sp/>/<sp/>(<ref refid="Const_8hpp_1a04232fb1dd2fa2aa27b1cc841de87e8b" kindref="member">C_p</ref><sp/>*<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af3b16daf7541428d52fabed88807430c" kindref="member">pib</ref>[k])<sp/>*<sp/>C;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>autoconversion<sp/>of<sp/>qc<sp/>to<sp/>qr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classvvm_1_1MicroPhysics_1a30ea0fb37f59a0c9196225aa460049e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1MicroPhysics_1a30ea0fb37f59a0c9196225aa460049e1" kindref="member">vvm::MicroPhysics::autoconversion</ref>(<ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>autort<sp/>=<sp/>0.001,<sp/>autotr<sp/>=<sp/>0.001;<sp/></highlight><highlight class="comment">//<sp/>autocon<sp/>rate<sp/>[1/sec],<sp/>autocon<sp/>threshold<sp/>[kg/kg]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-2;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>-2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qcplus<sp/>=<sp/>std::max(0.,<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8fb6dd58f0dae8301f414f4d2fccf60f" kindref="member">qcp</ref>[i][k]);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ar<sp/>=<sp/>autort<sp/>*<sp/>(qcplus<sp/>-<sp/>autotr);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>=<sp/>std::max(0.,<sp/>ar);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(AB2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arcrdt<sp/>=<sp/>std::min(ar<sp/>*<sp/><ref refid="Config_8hpp_1a943f07034774ef1261d62cd0d3d1fec9" kindref="member">DT</ref>,<sp/>qcplus);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>arcrdt<sp/>=<sp/>std::min(ar<sp/>*<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a35038a3310f0394ec73c928ff9801f84" kindref="member">d2t</ref>,<sp/>qcplus);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8fb6dd58f0dae8301f414f4d2fccf60f" kindref="member">qcp</ref>[i][k]<sp/>=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8fb6dd58f0dae8301f414f4d2fccf60f" kindref="member">qcp</ref>[i][k]<sp/>-<sp/>arcrdt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a280123bac37412349ba76e7d042d1004" kindref="member">qrp</ref>[i][k]<sp/>=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a280123bac37412349ba76e7d042d1004" kindref="member">qrp</ref>[i][k]<sp/>+<sp/>arcrdt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1aacc9ca191f0c94b063ad84e44951eb69" kindref="member">autoconversion</ref>[i][k]<sp/>=<sp/>arcrdt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classvvm_1_1MicroPhysics_1a124b68c95137705e772e933f3ff388c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1MicroPhysics_1a124b68c95137705e772e933f3ff388c9" kindref="member">vvm::MicroPhysics::accretion</ref>(<ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>autort<sp/>=<sp/>0.001,<sp/>autotr<sp/>=<sp/>0.001;<sp/></highlight><highlight class="comment">//<sp/>autocon<sp/>rate<sp/>[1/sec],<sp/>autocon<sp/>threshold<sp/>[kg/kg]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qcplus<sp/>=<sp/>0.,<sp/>ar<sp/>=<sp/>0.,<sp/>arcrdt<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-2;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>-2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qcplus<sp/>=<sp/>std::max(0.,<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8fb6dd58f0dae8301f414f4d2fccf60f" kindref="member">qcp</ref>[i][k]);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>=<sp/>autort<sp/>*<sp/>(qcplus<sp/>-<sp/>autotr);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>=<sp/>std::max(0.,<sp/>ar);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(AB2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arcrdt<sp/>=<sp/>std::min(ar<sp/>*<sp/><ref refid="Config_8hpp_1a943f07034774ef1261d62cd0d3d1fec9" kindref="member">DT</ref>,<sp/>qcplus);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arcrdt<sp/>=<sp/>std::min(ar<sp/>*<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a35038a3310f0394ec73c928ff9801f84" kindref="member">d2t</ref>,<sp/>qcplus);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8fb6dd58f0dae8301f414f4d2fccf60f" kindref="member">qcp</ref>[i][k]<sp/>=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a8fb6dd58f0dae8301f414f4d2fccf60f" kindref="member">qcp</ref>[i][k]<sp/>-<sp/>arcrdt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a280123bac37412349ba76e7d042d1004" kindref="member">qrp</ref>[i][k]<sp/>=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a280123bac37412349ba76e7d042d1004" kindref="member">qrp</ref>[i][k]<sp/>+<sp/>arcrdt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ad6e341d145021d01fd4ebca79787240e" kindref="member">accretion</ref>[i][k]<sp/>=<sp/>arcrdt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>evaporation<sp/>of<sp/>rain<sp/>water</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classvvm_1_1MicroPhysics_1aaaad239d8aa4db479cde21ce4ce12a65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1MicroPhysics_1aaaad239d8aa4db479cde21ce4ce12a65" kindref="member">vvm::MicroPhysics::evaporation</ref>(<ref refid="classvvm" kindref="compound">vvm</ref><sp/>&amp;<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pc<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>qrplus<sp/>=<sp/>0.,<sp/>qvplus<sp/>=<sp/>0.,<sp/>qvs<sp/>=<sp/>0.,<sp/>coef<sp/>=<sp/>0.,<sp/>deficit<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>er<sp/>=<sp/>0.,<sp/>erdt<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a1c19d7dc2ab861379c3c69c7e79bd5c8" kindref="member">nz</ref>-2;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc<sp/>=<sp/>380.<sp/>/<sp/>(pow(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af3b16daf7541428d52fabed88807430c" kindref="member">pib</ref>[k],<sp/><ref refid="Const_8hpp_1a04232fb1dd2fa2aa27b1cc841de87e8b" kindref="member">C_p</ref><sp/>/<sp/><ref refid="Const_8hpp_1a9151700714b0ec53aa32af2f907d0a99" kindref="member">Rd</ref>)<sp/>*<sp/><ref refid="Const_8hpp_1a1583b00a62bc1138f99bbfcd8ef81a6a" kindref="member">P0</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>coefficient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef<sp/>=<sp/>1.6<sp/>+<sp/>30.39<sp/>*<sp/>pow((<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a460b941aba46eeaf9d777d93ec472cc1" kindref="member">rhou</ref>[k]<sp/>*<sp/>qrplus),<sp/>0.2046);<sp/></highlight><highlight class="comment">//<sp/>ventilation<sp/>coef.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a54019773003b18a98f267df45ee230bb" kindref="member">nx</ref>-2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qrplus<sp/>=<sp/>std::max(0.,<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a280123bac37412349ba76e7d042d1004" kindref="member">qrp</ref>[i][k]);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qvplus<sp/>=<sp/>std::max(0.,<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ab2102a76763307034e6e6a65bf2716af" kindref="member">qvp</ref>[i][k]);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qvs<sp/>=<sp/>pc<sp/>*<sp/>exp(17.27<sp/>*<sp/>(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af3b16daf7541428d52fabed88807430c" kindref="member">pib</ref>[k]<sp/>*<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a3b3860b805e1f0e21f0834537a1d4feb" kindref="member">thp</ref>[i][k]<sp/>-<sp/>273.)<sp/>/<sp/>(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af3b16daf7541428d52fabed88807430c" kindref="member">pib</ref>[k]<sp/>*<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a3b3860b805e1f0e21f0834537a1d4feb" kindref="member">thp</ref>[i][k]<sp/>-<sp/>36.));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tetens<sp/>equation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deficit<sp/>=<sp/>std::max((1.<sp/>-<sp/>qvplus<sp/>/<sp/>qvs),<sp/>0.);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>saturation<sp/>dificit<sp/>(RH<sp/>&lt;<sp/>100%)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>er<sp/>=<sp/>coef<sp/>*<sp/>deficit<sp/>*<sp/>(pow(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a460b941aba46eeaf9d777d93ec472cc1" kindref="member">rhou</ref>[k]<sp/>*<sp/>qrplus,<sp/>0.525))<sp/>/<sp/>((2.03e4<sp/>+<sp/>9.584e6<sp/>/<sp/>(<ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a81425e3f8b7fb92cd0f32a6a2c9ab575" kindref="member">pb</ref>[k]<sp/>*<sp/>qvs))<sp/>*<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a460b941aba46eeaf9d777d93ec472cc1" kindref="member">rhou</ref>[k]);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(AB2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>erdt<sp/>=<sp/>std::min(qrplus,<sp/>std::max(0.,<sp/>er<sp/>*<sp/><ref refid="Config_8hpp_1a943f07034774ef1261d62cd0d3d1fec9" kindref="member">DT</ref>));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>erdt<sp/>=<sp/>std::min(qrplus,<sp/>std::max(0.,<sp/>er<sp/>*<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a35038a3310f0394ec73c928ff9801f84" kindref="member">d2t</ref>));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(erdt<sp/>&lt;<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Evaporation<sp/>Wrong&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a280123bac37412349ba76e7d042d1004" kindref="member">qrp</ref>[i][k]<sp/>=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a280123bac37412349ba76e7d042d1004" kindref="member">qrp</ref>[i][k]<sp/>-<sp/>erdt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ab2102a76763307034e6e6a65bf2716af" kindref="member">qvp</ref>[i][k]<sp/>=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ab2102a76763307034e6e6a65bf2716af" kindref="member">qvp</ref>[i][k]<sp/>+<sp/>erdt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a3b3860b805e1f0e21f0834537a1d4feb" kindref="member">thp</ref>[i][k]<sp/>=<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1a3b3860b805e1f0e21f0834537a1d4feb" kindref="member">thp</ref>[i][k]<sp/>-<sp/><ref refid="Const_8hpp_1a40d8d9faeac7bd5d4cee0beff9e019a5" kindref="member">Lv</ref><sp/>*<sp/>erdt<sp/>/<sp/>(<ref refid="Const_8hpp_1a04232fb1dd2fa2aa27b1cc841de87e8b" kindref="member">C_p</ref><sp/>*<sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1af3b16daf7541428d52fabed88807430c" kindref="member">pib</ref>[k]);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8cpp_1a5e376a387fdce5400f2e8ed865388257" kindref="member">model</ref>.<ref refid="classvvm_1ae1a38973a7dfe7577f47cc41fc5e66b0" kindref="member">evaporation</ref>[i][k]<sp/>=<sp/>erdt;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classvvm_1_1MicroPhysics_1aa6a9e66b8c45fa524936db5a225d680e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvvm_1_1MicroPhysics_1aa6a9e66b8c45fa524936db5a225d680e" kindref="member">vvm::MicroPhysics::NegativeValueProcess</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>var[][<ref refid="Const_8hpp_1a693aee47b2103d0a7fcd3a0a0dd4fb57" kindref="member">NZ</ref>])<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;<sp/><ref refid="Const_8hpp_1a693aee47b2103d0a7fcd3a0a0dd4fb57" kindref="member">NZ</ref>-2;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/><ref refid="Const_8hpp_1a4a9d32ff035c82119003134767948ebf" kindref="member">NX</ref>-2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var[i][k]<sp/>&lt;<sp/>0)<sp/>var[i][k]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/Aaron/2DVVM/full/0402/model/src/MicroPhysics.cpp"/>
  </compounddef>
</doxygen>
