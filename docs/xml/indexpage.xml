<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>Two-dimension Vector Vorticity Model</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="index_1md__2home_2Aaron_2TMIF__VVM__CSSWM_22DVVM_2README"/> This is a 2D cloud-resolving model based on vorticity equation</para>
<para><itemizedlist>
<listitem><para>Two-dimension Vector Vorticity Model<itemizedlist>
<listitem><para>Prerequisite</para>
</listitem><listitem><para>How to Use<itemizedlist>
<listitem><para>Optional for NetCDF output and PETSc Solver</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<sect1 id="index_1autotoc_md1">
<title>Prerequisite</title><para><itemizedlist>
<listitem><para>C++ compiler (higher than C++11)</para>
</listitem><listitem><para>CMake (higher than 3.0.0) (You can create your own Makefile by translating the CMakefile.txt if you don&apos;t want to use CMake)</para>
</listitem><listitem><para>netcdf-cxx4 (hdf5, netcdf-c are needed for netcdf-cxx) [optional]</para>
</listitem><listitem><para>PETSc [optional]</para>
</listitem><listitem><para>Eigen (this has already be installed in include folder) [optional]</para>
</listitem></itemizedlist>
</para>
<para>The tutorial for installing netcdf-cxx4 and PETSc can be found here</para>
<para><itemizedlist>
<listitem><para>This model will use txt output and Eigen solver for solving Poisson equation in default. However<itemizedlist>
<listitem><para>You can turn on the <computeroutput>OUTPUTNC</computeroutput> and turn off <computeroutput>OUTPUTTXT</computeroutput> in <computeroutput>./src/Config.hpp</computeroutput> to use netcdf output. Note that the netcdf doesn&apos;t support openMP output so if you want to use openMP, don&apos;t turn the <computeroutput>OUTPUTNC</computeroutput> flag on.</para>
</listitem><listitem><para>Turn on <computeroutput>PETSC</computeroutput> in <computeroutput>./src/Config.hpp</computeroutput>, the model will change the Poisson solver package to <computeroutput>PETSc</computeroutput></para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="index_1autotoc_md2">
<title>How to Use</title><para><orderedlist>
<listitem><para>Clone the project using</para>
<para><programlisting><codeline><highlight class="normal">git<sp/>clone<sp/>https://github.com/Aaron-Hsieh-0129/2D-Vector-Vorticity-Model.git</highlight></codeline>
</programlisting></para>
</listitem><listitem><para>You can change the model settings by changing the macro flags in the <computeroutput>./src/Config.hpp</computeroutput> and also the configuration object in the <computeroutput>./src/main.cpp</computeroutput>. In general, you only need to modify the configuration in <computeroutput>./src/main.cpp</computeroutput>. But if you want to change the numerical methods or the running cases, you might need to modify the flags in the <computeroutput>./src/Config.hpp</computeroutput></para>
</listitem><listitem><para>You are able to run the model by running the command under the project folder</para>
</listitem></orderedlist>
</para>
<para><programlisting><codeline><highlight class="normal">sh<sp/>run.sh</highlight></codeline>
</programlisting></para>
<para>or you can use your own command by referencing the command in <computeroutput>run.sh</computeroutput></para>
<sect2 id="index_1autotoc_md3">
<title>Optional for NetCDF output and PETSc Solver</title><para><orderedlist>
<listitem><para>Install netcdf-cxx, petsc</para>
<para>It&apos;s a little bit complicated to install libraries for C/C++.</para>
<para>I will provide a tutorial for installing C/C++ compiler and the libraries in another file here. Here, you don&apos;t need to have sudo privilege to install anything.</para>
</listitem><listitem><para>Link the installed libraries</para>
</listitem></orderedlist>
<itemizedlist>
<listitem><para>If you don&apos;t need to use PETSc and netcdf, you might need to turn off the link command in CMakeLists.txt.</para>
</listitem><listitem><para>You need to change the libraries path (netcdf, petsc) to your own path.</para>
</listitem><listitem><para>Change include path in CMakeLists.txt <programlisting filename=".CMake"><codeline><highlight class="normal">include_directories(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>include</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;/path/to/your/petsc&gt;/include</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
</programlisting></para>
</listitem><listitem><para>Change library link path <programlisting><codeline><highlight class="normal">find_library(libncxxPath<sp/>netcdf_c++4<sp/>&quot;&lt;path<sp/>to<sp/>your<sp/>netcdf_c++4&gt;/lib&quot;)</highlight></codeline>
<codeline><highlight class="normal">find_library(libpetscPath<sp/>petsc<sp/>&quot;&lt;path<sp/>to<sp/>your<sp/>petsc&gt;/lib&quot;)</highlight></codeline>
</programlisting></para>
</listitem></itemizedlist>
<orderedlist>
<listitem><para>Change the flags in <computeroutput>./src/Config.hpp</computeroutput>:</para>
</listitem></orderedlist>
<itemizedlist>
<listitem><para>Turn on <computeroutput>OUTPUTNC</computeroutput> and turn off <computeroutput>OUTPUTTXT</computeroutput> to use netcdf output.</para>
</listitem><listitem><para>Turn on <computeroutput>PETSC</computeroutput> to use PETSc solver. </para>
</listitem></itemizedlist>
</para>
</sect2>
</sect1>
    </detaileddescription>
    <location file="/home/Aaron/TMIF_VVM_CSSWM/2DVVM/README.md"/>
  </compounddef>
</doxygen>
